{
  "name": "courser",
  "version": "0.0.3",
  "description": "Route manager for express web framework",
  "keywords": [
    "web",
    "route"
  ],
  "homepage": "https://github.com/cfsghost/courser",
  "author": {
    "name": "Fred Chien",
    "email": "fred@mandice.com",
    "url": "錢逢祥"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:cfsghost/courser.git"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "dependencies": {
    "express": ">= 2.5.9"
  },
  "main": "./lib/courser.js",
  "readme": "courser\n=\n\nCourser is a route manager for express web framework, provides an easy way to manage routes.\n\nInstallation\n-\n\nUsing NPM to install Courser module directly:\n\n    npm install courser\n\n\nExample\n-\n\nA small example of managing routes for express:\n\n*&lt;Working Directory&gt;*/app.js\n\n    var express = require('express');\n    var Courser = require('courser');\n    \n    var app = express.createServer();\n    \n    app.configure(function() {\n      app.set('views', __dirname + '/views');\n    \tapp.set('view engine', 'jade');\n    });\n    \n    // Loading and Initializing Routes from specific path\n    var courser = new Courser(app);\n    courser.addPath(__dirname + '/routes');\n    courser.init(function() {\n    \tapp.listen(3000);\n    });\n\n*&lt;Working Directory&gt;*/routes/default.js\n\n    module.exports = {\n      '/': index,\n      '/hello': hello\n    };\n    \n    function index(req, res) {\n    \n    \tres.render('index', { title: 'Courser Example' });\n    };\n    \n    function hello(req, res, next) {\n    \n      res.render('hello', { title: 'Hello' });\n    };\n\n*&lt;Working Directory&gt;*/routes/other.js\n\n    module.exports = {\n      '/other': other\n    };\n    \n    function other(req, res) {\n    \n      res.render('other', { title: 'Courser Example Two' });\n    };\n    \n\nAll of JavaScript files(*.js) in specific path will be loaded by Courser. Developer can add more APIs or pages to existing files or new file. \n\nExample of Using Middleware:\n-\n\n    module.exports = {\n        '/middleware': [\n    \t\tDoSomethingBeforeHandler,\n    \t\tmiddleware\n    \t]\n    };\n    \n    function DoSomethingBeforeHandler(req, res, next) {\n    \n    \tconsole.log('Do Something');\n    \n    \tnext();\n    };\n    \n    function middleware(req, res) {\n    \n    \tres.render('index', { title: 'Courser Example' });\n    };\n\nExample of Specifying HTTP Method:\n-\n\n    module.exports = {\n        '/method': {\n    \t\tget: get,\n    \t\tpost: post\n    \t}\n    };\n    \n    function get(req, res) {\n    \n    \tres.end('GET Method');\n    };\n    \n    function post(req, res) {\n    \n    \tres.end('POST Method');\n    };\n\nLicense\n-\n\nLicensed under the MIT License\n\nAuthors\n-\n\nCopyright&copy; 2012 Fred Chien <<fred@mandice.com>>",
  "_id": "courser@0.0.3",
  "_from": "courser@*"
}
